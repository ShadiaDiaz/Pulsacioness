<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFWq/wNBkeQ6Q5LkdUOS
        5KJHlufEab7/4Gm9/fNqvv/9ar7//mm+/f1pvf3xYbT43kWT5cBDkuSbUZLYasiJX43IiV+yy4dfQAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQZHkOkST5aFEkuXSRJLk1EOR5KZCkedBAAAAAEOT5BNDkuWLRJLk60WT
        5f9Fk+X/RZPl/1an8P9rv///a7///2u///9rv///a7///2u///9pvf7/Spno/0WT5f+LjZ3/yYlg/8mJ
        YP/JiF/xootzCwAAAAAAAAAAAAAAAEST5YJEkuT+RZPl/0WT5f9Fk+X/RZPl/0SS5P5EkuWdRJLl5EWT
        5f9Fk+X/RZPl/1Gh7f9crvX/ar7+/2u///9rv///a7///2u///9rv///a7///2u///9nuvz/XZ3d/8SJ
        ZP/JiWD/yYlg/8eJYf9RkdfJSJHsDgAAAABEkuNSRZPl/0WT5f9EkuT1RJLjs0SS5LBEk+XyRZPl/0WT
        5f9Fk+X/RZPl/0WT5f9Fk+X/Zbj7/2u///9rv///a7///2u///9rv///a7///2u///9rv///a7///2u/
        //+knZ3/yYlg/8mJYP/JiWD/mYyP/0WT5f9DkuSiAAAAAESR5MJFk+X/RJLk6kOO4SIAAAAAAAAAAD+R
        4xxEkuTgRZPl/0WT5f9Fk+X/RZPl/0WT5f9dr/X/a7///2u///9rv///a7///2u///9rv///a7///2u/
        //9rv///erbl/8aJY//DiWX/yYlg/8WJY/9WkdP/RZPl/0ST5P1DjuEiRJPl8UWT5f9EkuSSAAAAAAAA
        AAAAAAAAAAAAAESS5JJFk+X/RZPl/0WT5f9Fk+X/RZPl/1Cg7P9rv///a7///2u///9rv///a7///2u/
        //9rv///a7///2u///+nmpX/UpHW/0WS5P9YkdH/cY+4/0WT5f9Fk+X/RZPl/0WT5GtEkuXuRZPl/0SR
        5ZUAAAAAAAAAAAAAAAAAAAAAQ5HkrUWT5f9Fk+X/RZPl/0WT5f9Fk+X/RZPl/2K1+f9rv///a7///2u/
        //9rv///a7///2u///9rv///f7Lb/8iJYP+Ajqj/SJLh/0WT5f9Fk+X/RZPl/0WT5f9Fk+X/RJHkkUWT
        5MBFk+X/Q5LkuAAAAAAAAAAAAAAAAAAAAABDk+WtRZPl/0WT5f9Fk+X/RZPl/0WT5f9Fk+X/SZjo/3Wz
        5v+PqcD/n6Cm/6Wdm/+knZ3/mqOt/4itzP+ylYX/yYlg/8mJYP+djIv/RZPl/0WT5f9Fk+X/RZPl/0WT
        5f9EkeWYRI7hNEST5aFCkuc2AAAAAAAAAAAAAAAAAAAAAESS5ZRFk+X/RZPl/0WT5f9Fk+X/RZPl/1KR
        1/+sinz/yIlg/8mJYP/JiWD/yYlg/8mJYP/JiWD/yYlg/8mJYP/JiWD/yYlg/72Ja/9GkuL/RZPl/0WT
        5f9Fk+X/RZPl/0SR5IcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARJLlZUWT5f9Fk+X/RZPl/0WT
        5f9Fk+X/RZLk/6uLff/JiWD/yYlg/8mJYP/JiWD/yYlg/8mJYP/JiWD/yYlg/8mJYP/JiWD/n4uJ/0aS
        4/9Fk+X/RZPl/0WT5f9Fk+X/RZLkYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/jeIkRZLk/kWT
        5f9YkdD/q4p9/3CPuP9FkuT/j42Z/8WJZP+lkY7/jJiw/4Gbv/+Dmrz/k5an/7GOfv/IiWD/yYlg/8mJ
        YP/JiWD/nYyL/0eS4v9Fk+X/RZPl/0WT5f9Bj+QnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABEk+XQUZHY/7mJbv/JiWD/yYlg/6+Kef+Qlan/X6Pt/1am+v9Wpvr/Vqb6/1am+v9Wpvr/Vqb6/22f
        2f+uj4P/yYlg/8mJYP/JiWD/mIyQ/0WS5P9Fk+X/RJPl3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEST42+ki4T/yYlg/8mJYP/Dimf/dZ3P/1am+v9Wpvr/Vqb6/1am+v9Wpvr/Vqb6/1am
        +v9Wpvr/Vqb6/1el+P+VlaT/yYlg/8mJYP/JiWD/d46x/0WT5f9EkeWDAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwIhnVsmJYP/JiWD/x4lh/3Wd0P9Wpvr/Vqb6/1am+v9Wpvr/Vqb6/1am
        +v9Wpvr/Vqb6/1am+v9Wpvr/Vqb6/1al+f+blJz/yYlg/8mJYP++iWr/TJLd+0GU5h8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIiV/JyYlg/8mJYP+dnKT/b7/8/1io+v9Wpvr/Vqb6/1am
        +v9Wpvr/Vqb6/1am+v9Wpvr/Vqb6/1am+v9Wpvr/Wan6/3O+9/+6jXT/yYlg/8mJYP+bi4yuAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAx4JZJciIX/7JiWD/xYlk/3W67/9fr/r/cMD8/1am
        +v9Wpvr/RY3Z/0aO2v9Vpfn/VaT4/0SM1/9KlOL/Vqb6/1+v+v9wwfz/Xa36/5Gpv//JiWD/yYlg/8mI
        YMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADIh19myYlg/8mJYP+kkI38WKj6/2y9
        /P9fsPr/Vqb6/1am+v9Om+v/On3D/zBurv8uaqr/PIDH/1Ge8P9Wpvr/WKj6/2q7+/9tvfz/X6fy/8aJ
        Y//JiWD/yIlf/b9/XxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmJYI/JiWD/yYlg/5Ob
        sPeEvvv/fLr7/1em+v9Wpvr/Vqb6/1am+v9Wpvr/OXzC/0eQ3P9Wpvr/Vqb6/1am+v9Wpvr/Yq36/4a/
        +/93t/r/so59/8mJYP/JiWD/yIhfOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyYhfocmJ
        YP/JiWD/6dLD/v/////o7fP/rcrp/16q+v9Wpvr/Vqb6/z6Cyv8qZKL/L2ys/0eQ3f9Wpvr/Vqb6/4K9
        +//E1Ob/7/P3///////WqY7/yYlg/8mJYP/LiWBKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADIh1+eyYlg/8mJYP/q0cH//////015p/8kWZP/k8Dw/1am+v9Wpvr/SJHe/1Oi9P9Rn/D/Ro/b/1am
        +v9Xpvr/us/m/yJYkv9pjbX//////9eoi//JiWD/yYlg/8mIXUcAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAMeIXYXJiWD/yYlg/+LBq///////n7bP/3OVuv/H4Pv/Vqb6/1am+v9Wpvr/Vqb6/1am
        +v9Wpvr/Vqb6/2Wt+v/w8/f/aY61/7PF2f//////0Jh1/8mJYP/JiWD/xohaLQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAyIheVMmJYP/JiWD/1KGB/////////////////6/U/P9Wpvr/Vqb6/1am
        +v9Wpvr/Vqb6/1am+v9Wpvr/V6b6/+/2/v////////////fv6f/JiWD/yYlg/8iIX/XMmWYFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADPj18QyIhf+MmJYP/JiWD/9Off///////f7v3/Yav6/1am
        +v9Wpvr/Vqb6/1am+v9Wpvr/Vqb6/1am+v9Wpvr/icH7//n7/v//////4b+p/8mJYP/JiWD/yIhfsgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADHiF+myYlg/8mJYP/KnoT7iL/5/Vmn
        +v9hsfv/Xq76/1en+v9Wpvr/Vqb6/1am+v9Wpvr/Wqr6/2Gx+/9ervr/Z6/6/6LB5f/KjWX/yYlg/8mJ
        YP/HiV5OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMeIXSnIiF/6yYlg/8mJ
        YP+VlqT4VqX5/m6//P9uv/z/Vqb6/1am+v9Wpvr/Vqb6/1am+v9bq/r/bb38/2q6+/9dpPD/tI57/8mJ
        YP/JiWD/x4dfy/8AAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMmJ
        X4DJiWD/yYlg/8mJYP+alJ77X6r1/mKy+/9Wpvr/Vqb6/1am+v9Wpvr/Vqb6/1am+v9gsPr/a6fk/7OO
        e//JiWD/yYlg/8mJYPfJhF8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/39/AsmIXq/JiWD/yYlg/8mJYP+4jHX+gJq//luk8v9Wpvr/Vqb6/1am+v9Wpvr/ZKLm/5KW
        qP/EimX/yYlg/8mJYP/IiV/9x4deXAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA1H9VBq6Kec7JiWD/yYlg/8mJYP/JiWD/xYlk/7GOf/+mkY7/qJCL/7iM
        df/IiWD/yYlg/8mJYP/JiWD/xohi/MeHYVwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARJPko3mOr/+/iWj/yYlg/8mJYP/JiWD/yYlg/8mJ
        YP/JiWD/yYlg/8mJYP/JiWD/yYlg/66Kev9ij8bhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVp/GAS5rp/02S3P+Bjqf/wIlo38iI
        X/7JiWD/yYlg/8mJYP/JiWD/yYhg9qOLhftuj7r/R5Xl/1Wm8L4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGi8/0lbrfT/RZPl/0OS
        45QAAAAAxo1VEsaFXzvKh2BNyoheSciHXC/Uf1UGRJPlWkSS5PtSou3/abz/hwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASLbaB0mY
        6NhEkuN4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQpLmSUWT5uJYq/MrAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+AAB8CAAAOAAAABAAAAAQwAAAAeAAAAHgAAAB4AAAAeAAAA/gAAAP4A
        AAD/AAAB/wAAAf8AAAH/AAAD/gAAA/4AAAH+AAAB/gAAAf4AAAH+AAAB/gAAAf4AAAP/AAAD/wAAA/+A
        AAf/gAAP/8AAH//gAD//4AA//+EAP//j/j8=
</value>
  </data>
</root>